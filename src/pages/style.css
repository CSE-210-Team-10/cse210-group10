@import '../styles/root.css';
@import './upcoming-deadlines.css';

body {
	height: 100vh;
	width: 100vw;
	min-width: 108rem;
	margin: 0 auto;
	padding: var(--app-padding);
	display: flex;
	flex-direction: column;
	background-color: var(--bg-primary);
	color: var(--text-primary);
}

/* header */

header {
	display: flex;
	align-items: center;
	padding: var(--padding) 0;
	gap: var(--gap);
}

header #logo-heading {
	display: flex;
	flex-direction: row;
	gap: var(--gap);
	flex-grow: 1;
}

/* header's view toggle */

#view-toggle {
	display: flex;
	flex-direction: row;
	gap: 0;
}

#view-toggle button:first-child {
	border-radius: var(--border-radius-primary) 0 0 var(--border-radius-primary);
	border-right: none;
}

#view-toggle button:last-child {
	border-radius: 0 var(--border-radius-primary) var(--border-radius-primary) 0;
}

#view-toggle button:disabled {
	background-color: var(--bg-accent-light);
	color: var(--text-accent-light);
}

#view-toggle button:disabled:hover {
	background-color: var(--bg-accent);
	color: var(--text-accent);
}

#view-toggle button:not(:disabled):hover {
	background-color: var(--bg-accent);
	color: var(--text-accent);
}

/* main */

main {
	display: grid;
	grid-template-columns: 1fr 6fr;
	grid-template-rows: auto 1fr;
	gap: var(--gap);
	flex-grow: 1;
	/* This helps with nested scrolling */
	min-height: 0;
}

nav, section, aside {
	padding: var(--padding);
	border-radius: var(--border-radius-primary);
	border: var(--border-width) solid var(--border-primary);
	background-color: var(--bg-secondary);
}

section h2, aside h2 {
	margin-bottom: var(--gap);
}

.links {
	list-style-type: none;
	display: flex;
	flex-direction: column;
	gap: var(--gap);
}

.links a {
	display: block;
	padding: var(--padding);
	border-radius: var(--border-radius-primary);
	text-decoration: none;
	color: var(--text-primary);
	/* border: var(--border-width) solid var(--border-primary); */
	transition: all 0.25s ease;
}

.links a.active, .links a:hover {
	background-color: var(--bg-accent-light);
}

.links img {
	width: 1rem;
	height: 1rem;
}

/* aside */

aside {
	position: relative;
	height: auto;
}

aside .controls {
	position: absolute;
	top: var(--padding);
	right: var(--padding);
}

/* task-panels */

#task-panels {
	display: grid;
	grid-template-columns: 2fr 3fr;
	grid-template-rows: auto 1fr;
	grid-template-areas:
		"filters filters"
		"github-tasks personal-tasks";
	gap: var(--gap);
	/* Important for nested grid scrolling */
	min-height: 0;
}

/* grid area assignments */
#tasks-filters {
	grid-area: filters;
}

#github-task-panel {
	grid-area: github-tasks;
}

#personal-task-panel {
	grid-area: personal-tasks;
}

#tasks-filters {
	display: flex;
	flex-direction: row;
	gap: calc(var(--gap) / 4 * 3);
}

#tasks-filters input {
	border: var(--border-width) solid var(--border-secondary);
	border-radius: var(--border-radius-small);
	padding: 0.5rem 0.75rem;
	font-size: 1rem;
}

/* First, make the sections fill their grid area height */
#github-task-panel,
#personal-task-panel {
	display: flex;
	flex-direction: column;
	overflow: hidden;
	/* Important for nested flex scrolling */
	min-height: 0;
}

/* for create button position */
#personal-task-panel {
	position: relative;
}

#create-task-btn {
	position: absolute;
	top: calc(var(--padding) / 4 * 3);
	right: var(--padding);
}

.tasks {
	list-style-type: none;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	list-style: none;
	flex: 1;
	overflow-y: auto;
	/* Take remaining space */
	flex: 1;
	/* Important! This allows flex child to scroll */
	min-height: 0;
	padding-right: 0.5rem;
	/* Optional: gives space for scrollbar */
}

::-webkit-scrollbar {
	width: 10px;
}

::-webkit-scrollbar-track {
	background: white;
	border-radius: 10px;
}

::-webkit-scrollbar-thumb {
	background-color: #b0b0b0;
	border-radius: 10px;
	border: 3px solid white;
}

::-webkit-scrollbar-thumb:hover {
	background-color: #878787;
	gap: var(--gap);
}